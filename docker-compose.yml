version: '3.8'

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: poetry_saas
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - poetry_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  mariadb:
    image: mariadb:11
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: poetry_saas
      MYSQL_USER: poetry
      MYSQL_PASSWORD: poetry
    volumes:
      - mariadb_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - poetry_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - poetry_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: ./infrastructure/docker/development/api.Dockerfile
    environment:
      - NODE_ENV=development
      - DATABASE_HOST=postgres
      - DATABASE_TYPE=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=poetry_saas
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "3333:3333"
    networks:
      - poetry_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./apps/backend/api:/app/apps/backend/api
      - ./libs:/app/libs
      - node_modules:/app/node_modules

  customer:
    build:
      context: .
      dockerfile: ./infrastructure/docker/development/customer.Dockerfile
    ports:
      - "4200:4200"
    networks:
      - poetry_network
    depends_on:
      - api
    volumes:
      - ./apps/frontend/customer:/app/apps/frontend/customer
      - ./libs:/app/libs
      - node_modules:/app/node_modules

  admin:
    build:
      context: .
      dockerfile: ./infrastructure/docker/development/admin.Dockerfile
    ports:
      - "4300:4300"
    networks:
      - poetry_network
    depends_on:
      - api
    volumes:
      - ./apps/frontend/admin:/app/apps/frontend/admin
      - ./libs:/app/libs
      - node_modules:/app/node_modules

networks:
  poetry_network:
    driver: bridge

volumes:
  postgres_data:
  mariadb_data:
  node_modules:
